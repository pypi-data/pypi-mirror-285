
UDISKS(1)                           udisks                           UDISKS(1)

NAME
       udisks - udisks command line tool

SYNOPSIS
       udisks [OPTIONS]

DESCRIPTION
       udisks is a simple command line client for the udisks(7) system bus
       service.

OPTIONS
       --dump
           Dump all information about all devices. Please include this when
           filing bugs.

       --enumerate
           Lists all object paths of devices know to the daemon.

       --enumerate-device-files
           Lists all device files of devices know to the daemon.

       --monitor
           Connect to the daemon and print a line every time an event happens.

       --monitor-detail
           Like --monitor but prints the full details of the device whenever
           an event happens.

       --show-info device_file
           Shows information about device_file.

       --inhibit-polling device_file [-- program arg ...]
           Inhibits polling on device_file. If no program is given, polling is
           inhibited until Ctrl+C is pressed. Otherwise the program is spawned
           and the polling is only inhibited until the program terminates.

       --poll-for-media device_file
           Polls device_file to perform media detection.

       --inhibit-all-polling [-- program arg ...]
           Inhibits polling on all devices. If no program is given, polling is
           inhibited until Ctrl+C is pressed. Otherwise the program is spawned
           and the polling is only inhibited until the program terminates.

       --mount device_file [--mount-fstype fstype] [--mount-options options]
           Mounts the device represented by device_file using the file system
           fstype and a comma-separated list of options.

       --unmount device_file [--unmount-options options]
           Unmounts the device represented by device_file using a
           comma-separated list of options.

       --detach device_file [--detach-options options]
           Detaches (e.g. powering down the physical port the device is
           connected to) the device represented by device_file using a
           comma-separated list of options.

       --eject device_file [--eject-options options]
           Ejects media from the device represented by device_file using a
           comma-separated list of options.

       --ata-smart-refresh device_file [--ata-smart-wakeup]
           Refreshes ATA SMART data for device_file. If the disk is sleeping
           it will not be woken up unless --ata-smart-wakeup is passed. will
           be used.

       --ata-smart-refresh device_file --ata-smart-simulate blob
           Read ATA SMART data from blob for device_file. This can only be
           done by the super user and is typically used for testing that
           clients relying on the ATA SMART data provided by udisks behave
           correctly. The libatasmart git repository at
           http://git.0pointer.de/?p=libatasmart.git;a=summary contains a
           collection of blobs from failing disks.

       --inhibit [-- program arg ...]
           Inhibits clients from invoking methods on the daemon that require
           authorization (all methods will return the
           org.freedesktop.UDisks.Error.Inhibited error) if the caller is not
           the super user. This is typically used by OS installers and other
           programs that expects full control of the system, specifically to
           avoid automounting devices. Only the super user can do this.

           If no program is given, the daemon is inhibited until Ctrl+C is
           pressed. Otherwise the program is spawned and the daemon is only
           inhibited until the program terminates.

       --set-spindown device_file --spindown-timeout seconds
       [-- program arg ...]
           Configures disk spindown timeout on device_file to seconds. See the
           section called "SPINNING DOWN DISKS" for important information
           before using this option.

           If no program is given, the spindown time will be used until Ctrl+C
           is pressed. Otherwise the program is spawned and the the spindown
           timeout will only be used until the program terminates.

       --set-spindown-all --spindown-timeout seconds [-- program arg ...]
           Configures disk spindown timeout on all disks that can be spun down
           to seconds. See the section called "SPINNING DOWN DISKS" for
           important information before using this option.

           If no program is given, the spindown time will be used until Ctrl+C
           is pressed. Otherwise the program is spawned and the the spindown
           timeout will only be used until the program terminates.

       --help
           Show help options.

SPINNING DOWN DISKS
       Caution should be exercised when configuring disk spin down timeouts.

       Note that every time a disk is spun down, the "start-stop-count" ATA
       SMART attribute will increase by 1 and most disks are only good for a
       limited number (typically 50,000 but it varies by manufacturer and
       model). In addition, the drive may take as long as 30 seconds to
       respond to subsequent disk access - most drives are typically faster,
       see the "spin-up-time" ATA SMART attribute.

       On the other hand, cautious use (e.g. using conservative timeouts) of
       the ability to spin down disks, can be a good way to trade power
       consumption (typically 8 vs 1 Watts for 3.5" drives) and heat emission
       for a slightly higher latency.

AUTHOR
       Written by David Zeuthen <david@fubar.dk> with a lot of help from many
       others.

BUGS
       Please send bug reports to either the distribution bug tracker or the
       upstream bug tracker at
       http://bugs.freedesktop.org/enter_bug.cgi?product=udisks.

SEE ALSO
       udisks-daemon(8), udisks(7),

udisks                            April 2008                         UDISKS(1)