# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ParabolicMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkParabolicErodeImageFilterPython
else:
    import _itkParabolicErodeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkParabolicErodeImageFilterID2ID2_Superclass_New():
    return itkParabolicErodeImageFilterID2ID2_Superclass.New()

class itkParabolicErodeImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkParabolicErodeImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID2ID2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID2ID2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD2"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID2ID2_Superclass

        Create a new object of the class itkParabolicErodeImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID2ID2_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Superclass_swigregister(itkParabolicErodeImageFilterID2ID2_Superclass)

def itkParabolicErodeImageFilterID3ID3_Superclass_New():
    return itkParabolicErodeImageFilterID3ID3_Superclass.New()

class itkParabolicErodeImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkParabolicErodeImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID3ID3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID3ID3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD3"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID3ID3_Superclass

        Create a new object of the class itkParabolicErodeImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID3ID3_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Superclass_swigregister(itkParabolicErodeImageFilterID3ID3_Superclass)

def itkParabolicErodeImageFilterID4ID4_Superclass_New():
    return itkParabolicErodeImageFilterID4ID4_Superclass.New()

class itkParabolicErodeImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkParabolicErodeImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID4ID4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID4ID4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD4"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID4ID4_Superclass

        Create a new object of the class itkParabolicErodeImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID4ID4_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Superclass_swigregister(itkParabolicErodeImageFilterID4ID4_Superclass)

def itkParabolicErodeImageFilterIF2IF2_Superclass_New():
    return itkParabolicErodeImageFilterIF2IF2_Superclass.New()

class itkParabolicErodeImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF2IF2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF2IF2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD2"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF2IF2_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF2IF2_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Superclass_swigregister(itkParabolicErodeImageFilterIF2IF2_Superclass)

def itkParabolicErodeImageFilterIF3IF3_Superclass_New():
    return itkParabolicErodeImageFilterIF3IF3_Superclass.New()

class itkParabolicErodeImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF3IF3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF3IF3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD3"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF3IF3_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF3IF3_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Superclass_swigregister(itkParabolicErodeImageFilterIF3IF3_Superclass)

def itkParabolicErodeImageFilterIF4IF4_Superclass_New():
    return itkParabolicErodeImageFilterIF4IF4_Superclass.New()

class itkParabolicErodeImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF4IF4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF4IF4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD4"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF4IF4_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF4IF4_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Superclass_swigregister(itkParabolicErodeImageFilterIF4IF4_Superclass)

def itkParabolicErodeImageFilterISS2ISS2_Superclass_New():
    return itkParabolicErodeImageFilterISS2ISS2_Superclass.New()

class itkParabolicErodeImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD2"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS2ISS2_Superclass

        Create a new object of the class itkParabolicErodeImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS2ISS2_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Superclass_swigregister(itkParabolicErodeImageFilterISS2ISS2_Superclass)

def itkParabolicErodeImageFilterISS3ISS3_Superclass_New():
    return itkParabolicErodeImageFilterISS3ISS3_Superclass.New()

class itkParabolicErodeImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD3"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS3ISS3_Superclass

        Create a new object of the class itkParabolicErodeImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS3ISS3_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Superclass_swigregister(itkParabolicErodeImageFilterISS3ISS3_Superclass)

def itkParabolicErodeImageFilterISS4ISS4_Superclass_New():
    return itkParabolicErodeImageFilterISS4ISS4_Superclass.New()

class itkParabolicErodeImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD4"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS4ISS4_Superclass

        Create a new object of the class itkParabolicErodeImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS4ISS4_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Superclass_swigregister(itkParabolicErodeImageFilterISS4ISS4_Superclass)

def itkParabolicErodeImageFilterIUC2IUC2_Superclass_New():
    return itkParabolicErodeImageFilterIUC2IUC2_Superclass.New()

class itkParabolicErodeImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD2"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC2IUC2_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Superclass_swigregister(itkParabolicErodeImageFilterIUC2IUC2_Superclass)

def itkParabolicErodeImageFilterIUC3IUC3_Superclass_New():
    return itkParabolicErodeImageFilterIUC3IUC3_Superclass.New()

class itkParabolicErodeImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD3"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC3IUC3_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Superclass_swigregister(itkParabolicErodeImageFilterIUC3IUC3_Superclass)

def itkParabolicErodeImageFilterIUC4IUC4_Superclass_New():
    return itkParabolicErodeImageFilterIUC4IUC4_Superclass.New()

class itkParabolicErodeImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD4"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC4IUC4_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Superclass_swigregister(itkParabolicErodeImageFilterIUC4IUC4_Superclass)

def itkParabolicErodeImageFilterIUS2IUS2_Superclass_New():
    return itkParabolicErodeImageFilterIUS2IUS2_Superclass.New()

class itkParabolicErodeImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD2"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS2IUS2_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Superclass_swigregister(itkParabolicErodeImageFilterIUS2IUS2_Superclass)

def itkParabolicErodeImageFilterIUS3IUS3_Superclass_New():
    return itkParabolicErodeImageFilterIUS3IUS3_Superclass.New()

class itkParabolicErodeImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD3"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS3IUS3_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Superclass_swigregister(itkParabolicErodeImageFilterIUS3IUS3_Superclass)

def itkParabolicErodeImageFilterIUS4IUS4_Superclass_New():
    return itkParabolicErodeImageFilterIUS4IUS4_Superclass.New()

class itkParabolicErodeImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_Clone(self)

    def SetScale(self, *args):
        r"""
        SetScale(self, scale)

        Parameters
        ----------
        scale: double

        SetScale(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_SetScale(self, *args)

    def GetScale(self):
        r"""GetScale(self) -> itkFixedArrayD4"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_GetScale(self)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_ParabolicAlgorithm_INTERSECTION
    

    def SetParabolicAlgorithm(self, _arg):
        r"""
        SetParabolicAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_SetParabolicAlgorithm(self, _arg)

    def GetParabolicAlgorithm(self):
        r"""GetParabolicAlgorithm(self) -> int const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_GetParabolicAlgorithm(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_UseImageSpacingOff(self)
    SameDimension = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_SameDimension
    
    Comparable = _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_Comparable
    
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkParabolicErodeImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS4IUS4_Superclass in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Superclass_swigregister(itkParabolicErodeImageFilterIUS4IUS4_Superclass)

def itkParabolicErodeImageFilterID2ID2_New():
    return itkParabolicErodeImageFilterID2ID2.New()

class itkParabolicErodeImageFilterID2ID2(itkParabolicErodeImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID2ID2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID2ID2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID2ID2

        Create a new object of the class itkParabolicErodeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID2ID2 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID2ID2_swigregister(itkParabolicErodeImageFilterID2ID2)

def itkParabolicErodeImageFilterID3ID3_New():
    return itkParabolicErodeImageFilterID3ID3.New()

class itkParabolicErodeImageFilterID3ID3(itkParabolicErodeImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID3ID3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID3ID3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID3ID3

        Create a new object of the class itkParabolicErodeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID3ID3 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID3ID3_swigregister(itkParabolicErodeImageFilterID3ID3)

def itkParabolicErodeImageFilterID4ID4_New():
    return itkParabolicErodeImageFilterID4ID4.New()

class itkParabolicErodeImageFilterID4ID4(itkParabolicErodeImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterID4ID4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterID4ID4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterID4ID4

        Create a new object of the class itkParabolicErodeImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterID4ID4 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterID4ID4_swigregister(itkParabolicErodeImageFilterID4ID4)

def itkParabolicErodeImageFilterIF2IF2_New():
    return itkParabolicErodeImageFilterIF2IF2.New()

class itkParabolicErodeImageFilterIF2IF2(itkParabolicErodeImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF2IF2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF2IF2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF2IF2

        Create a new object of the class itkParabolicErodeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF2IF2 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF2IF2_swigregister(itkParabolicErodeImageFilterIF2IF2)

def itkParabolicErodeImageFilterIF3IF3_New():
    return itkParabolicErodeImageFilterIF3IF3.New()

class itkParabolicErodeImageFilterIF3IF3(itkParabolicErodeImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF3IF3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF3IF3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF3IF3

        Create a new object of the class itkParabolicErodeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF3IF3 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF3IF3_swigregister(itkParabolicErodeImageFilterIF3IF3)

def itkParabolicErodeImageFilterIF4IF4_New():
    return itkParabolicErodeImageFilterIF4IF4.New()

class itkParabolicErodeImageFilterIF4IF4(itkParabolicErodeImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIF4IF4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIF4IF4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIF4IF4

        Create a new object of the class itkParabolicErodeImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIF4IF4 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIF4IF4_swigregister(itkParabolicErodeImageFilterIF4IF4)

def itkParabolicErodeImageFilterISS2ISS2_New():
    return itkParabolicErodeImageFilterISS2ISS2.New()

class itkParabolicErodeImageFilterISS2ISS2(itkParabolicErodeImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS2ISS2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS2ISS2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS2ISS2

        Create a new object of the class itkParabolicErodeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS2ISS2 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS2ISS2_swigregister(itkParabolicErodeImageFilterISS2ISS2)

def itkParabolicErodeImageFilterISS3ISS3_New():
    return itkParabolicErodeImageFilterISS3ISS3.New()

class itkParabolicErodeImageFilterISS3ISS3(itkParabolicErodeImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS3ISS3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS3ISS3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS3ISS3

        Create a new object of the class itkParabolicErodeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS3ISS3 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS3ISS3_swigregister(itkParabolicErodeImageFilterISS3ISS3)

def itkParabolicErodeImageFilterISS4ISS4_New():
    return itkParabolicErodeImageFilterISS4ISS4.New()

class itkParabolicErodeImageFilterISS4ISS4(itkParabolicErodeImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterISS4ISS4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterISS4ISS4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterISS4ISS4

        Create a new object of the class itkParabolicErodeImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterISS4ISS4 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterISS4ISS4_swigregister(itkParabolicErodeImageFilterISS4ISS4)

def itkParabolicErodeImageFilterIUC2IUC2_New():
    return itkParabolicErodeImageFilterIUC2IUC2.New()

class itkParabolicErodeImageFilterIUC2IUC2(itkParabolicErodeImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC2IUC2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC2IUC2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC2IUC2

        Create a new object of the class itkParabolicErodeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC2IUC2 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC2IUC2_swigregister(itkParabolicErodeImageFilterIUC2IUC2)

def itkParabolicErodeImageFilterIUC3IUC3_New():
    return itkParabolicErodeImageFilterIUC3IUC3.New()

class itkParabolicErodeImageFilterIUC3IUC3(itkParabolicErodeImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC3IUC3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC3IUC3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC3IUC3

        Create a new object of the class itkParabolicErodeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC3IUC3 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC3IUC3_swigregister(itkParabolicErodeImageFilterIUC3IUC3)

def itkParabolicErodeImageFilterIUC4IUC4_New():
    return itkParabolicErodeImageFilterIUC4IUC4.New()

class itkParabolicErodeImageFilterIUC4IUC4(itkParabolicErodeImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUC4IUC4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUC4IUC4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUC4IUC4

        Create a new object of the class itkParabolicErodeImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUC4IUC4 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUC4IUC4_swigregister(itkParabolicErodeImageFilterIUC4IUC4)

def itkParabolicErodeImageFilterIUS2IUS2_New():
    return itkParabolicErodeImageFilterIUS2IUS2.New()

class itkParabolicErodeImageFilterIUS2IUS2(itkParabolicErodeImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS2IUS2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS2IUS2_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS2IUS2

        Create a new object of the class itkParabolicErodeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS2IUS2 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS2IUS2_swigregister(itkParabolicErodeImageFilterIUS2IUS2)

def itkParabolicErodeImageFilterIUS3IUS3_New():
    return itkParabolicErodeImageFilterIUS3IUS3.New()

class itkParabolicErodeImageFilterIUS3IUS3(itkParabolicErodeImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS3IUS3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS3IUS3_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS3IUS3

        Create a new object of the class itkParabolicErodeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS3IUS3 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS3IUS3_swigregister(itkParabolicErodeImageFilterIUS3IUS3)

def itkParabolicErodeImageFilterIUS4IUS4_New():
    return itkParabolicErodeImageFilterIUS4IUS4.New()

class itkParabolicErodeImageFilterIUS4IUS4(itkParabolicErodeImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkParabolicErodeImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParabolicErodeImageFilterIUS4IUS4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParabolicErodeImageFilterIUS4IUS4_Pointer"""
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkParabolicErodeImageFilterPython.delete_itkParabolicErodeImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParabolicErodeImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParabolicErodeImageFilterIUS4IUS4

        Create a new object of the class itkParabolicErodeImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicErodeImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicErodeImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicErodeImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicErodeImageFilterIUS4IUS4 in _itkParabolicErodeImageFilterPython:
_itkParabolicErodeImageFilterPython.itkParabolicErodeImageFilterIUS4IUS4_swigregister(itkParabolicErodeImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def parabolic_erode_dilate_image_filter(*args: itkt.ImageLike,  scale: Union[float, Sequence[float]]=..., parabolic_algorithm: int=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ParabolicErodeDilateImageFilter"""
    import itk

    kwarg_typehints = { 'scale':scale,'parabolic_algorithm':parabolic_algorithm,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ParabolicErodeDilateImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def parabolic_erode_dilate_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ParabolicMorphology.ParabolicErodeDilateImageFilter
    parabolic_erode_dilate_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    parabolic_erode_dilate_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def parabolic_erode_image_filter(*args: itkt.ImageLike,  scale: Union[Sequence[float], float]=..., parabolic_algorithm: int=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ParabolicErodeImageFilter"""
    import itk

    kwarg_typehints = { 'scale':scale,'parabolic_algorithm':parabolic_algorithm,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ParabolicErodeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def parabolic_erode_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ParabolicMorphology.ParabolicErodeImageFilter
    parabolic_erode_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    parabolic_erode_image_filter.__doc__ = filter_object.__doc__



