# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ParabolicMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMorphologicalDistanceTransformImageFilterPython
else:
    import _itkMorphologicalDistanceTransformImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkMorphologicalDistanceTransformImageFilterIUC2ID2_New():
    return itkMorphologicalDistanceTransformImageFilterIUC2ID2.New()

class itkMorphologicalDistanceTransformImageFilterIUC2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC2ID2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC2ID2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC2ID2

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC2ID2 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2ID2_swigregister(itkMorphologicalDistanceTransformImageFilterIUC2ID2)

def itkMorphologicalDistanceTransformImageFilterIUC2IF2_New():
    return itkMorphologicalDistanceTransformImageFilterIUC2IF2.New()

class itkMorphologicalDistanceTransformImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC2IF2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC2IF2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC2IF2

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC2IF2 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC2IF2_swigregister(itkMorphologicalDistanceTransformImageFilterIUC2IF2)

def itkMorphologicalDistanceTransformImageFilterIUC3ID3_New():
    return itkMorphologicalDistanceTransformImageFilterIUC3ID3.New()

class itkMorphologicalDistanceTransformImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC3ID3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC3ID3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC3ID3

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC3ID3 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3ID3_swigregister(itkMorphologicalDistanceTransformImageFilterIUC3ID3)

def itkMorphologicalDistanceTransformImageFilterIUC3IF3_New():
    return itkMorphologicalDistanceTransformImageFilterIUC3IF3.New()

class itkMorphologicalDistanceTransformImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC3IF3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC3IF3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC3IF3

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC3IF3 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC3IF3_swigregister(itkMorphologicalDistanceTransformImageFilterIUC3IF3)

def itkMorphologicalDistanceTransformImageFilterIUC4ID4_New():
    return itkMorphologicalDistanceTransformImageFilterIUC4ID4.New()

class itkMorphologicalDistanceTransformImageFilterIUC4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC4ID4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC4ID4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC4ID4

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC4ID4 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4ID4_swigregister(itkMorphologicalDistanceTransformImageFilterIUC4ID4)

def itkMorphologicalDistanceTransformImageFilterIUC4IF4_New():
    return itkMorphologicalDistanceTransformImageFilterIUC4IF4.New()

class itkMorphologicalDistanceTransformImageFilterIUC4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUC4IF4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUC4IF4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUC4IF4

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUC4IF4 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUC4IF4_swigregister(itkMorphologicalDistanceTransformImageFilterIUC4IF4)

def itkMorphologicalDistanceTransformImageFilterIUS2ID2_New():
    return itkMorphologicalDistanceTransformImageFilterIUS2ID2.New()

class itkMorphologicalDistanceTransformImageFilterIUS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS2ID2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS2ID2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS2ID2

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS2ID2 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2ID2_swigregister(itkMorphologicalDistanceTransformImageFilterIUS2ID2)

def itkMorphologicalDistanceTransformImageFilterIUS2IF2_New():
    return itkMorphologicalDistanceTransformImageFilterIUS2IF2.New()

class itkMorphologicalDistanceTransformImageFilterIUS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS2IF2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS2IF2_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS2IF2

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS2IF2 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS2IF2_swigregister(itkMorphologicalDistanceTransformImageFilterIUS2IF2)

def itkMorphologicalDistanceTransformImageFilterIUS3ID3_New():
    return itkMorphologicalDistanceTransformImageFilterIUS3ID3.New()

class itkMorphologicalDistanceTransformImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS3ID3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS3ID3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS3ID3

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS3ID3 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3ID3_swigregister(itkMorphologicalDistanceTransformImageFilterIUS3ID3)

def itkMorphologicalDistanceTransformImageFilterIUS3IF3_New():
    return itkMorphologicalDistanceTransformImageFilterIUS3IF3.New()

class itkMorphologicalDistanceTransformImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS3IF3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS3IF3_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS3IF3

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS3IF3 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS3IF3_swigregister(itkMorphologicalDistanceTransformImageFilterIUS3IF3)

def itkMorphologicalDistanceTransformImageFilterIUS4ID4_New():
    return itkMorphologicalDistanceTransformImageFilterIUS4ID4.New()

class itkMorphologicalDistanceTransformImageFilterIUS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS4ID4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS4ID4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS4ID4

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS4ID4 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4ID4_swigregister(itkMorphologicalDistanceTransformImageFilterIUS4ID4)

def itkMorphologicalDistanceTransformImageFilterIUS4IF4_New():
    return itkMorphologicalDistanceTransformImageFilterIUS4IF4.New()

class itkMorphologicalDistanceTransformImageFilterIUS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4):
    r"""Proxy of C++ itkMorphologicalDistanceTransformImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalDistanceTransformImageFilterIUS4IF4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalDistanceTransformImageFilterIUS4IF4_Pointer"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_GetOutsideValue(self)

    def SetUseImageSpacing(self, uis):
        r"""
        SetUseImageSpacing(self, uis)

        Parameters
        ----------
        uis: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SetUseImageSpacing(self, uis)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_GetUseImageSpacing(self)

    def SetSqrDist(self, _arg):
        r"""
        SetSqrDist(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SetSqrDist(self, _arg)

    def GetSqrDist(self):
        r"""GetSqrDist(self) -> bool const &"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_GetSqrDist(self)

    def SqrDistOn(self):
        r"""SqrDistOn(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SqrDistOn(self)

    def SqrDistOff(self):
        r"""SqrDistOff(self)"""
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SqrDistOff(self)
    SameDimension = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_SameDimension
    
    Comparable = _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_Comparable
    
    __swig_destroy__ = _itkMorphologicalDistanceTransformImageFilterPython.delete_itkMorphologicalDistanceTransformImageFilterIUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalDistanceTransformImageFilterIUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalDistanceTransformImageFilterIUS4IF4

        Create a new object of the class itkMorphologicalDistanceTransformImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalDistanceTransformImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalDistanceTransformImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalDistanceTransformImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalDistanceTransformImageFilterIUS4IF4 in _itkMorphologicalDistanceTransformImageFilterPython:
_itkMorphologicalDistanceTransformImageFilterPython.itkMorphologicalDistanceTransformImageFilterIUS4IF4_swigregister(itkMorphologicalDistanceTransformImageFilterIUS4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def morphological_distance_transform_image_filter(*args: itkt.ImageLike,  outside_value: int=..., use_image_spacing: bool=..., sqr_dist: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MorphologicalDistanceTransformImageFilter"""
    import itk

    kwarg_typehints = { 'outside_value':outside_value,'use_image_spacing':use_image_spacing,'sqr_dist':sqr_dist }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MorphologicalDistanceTransformImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def morphological_distance_transform_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ParabolicMorphology.MorphologicalDistanceTransformImageFilter
    morphological_distance_transform_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    morphological_distance_transform_image_filter.__doc__ = filter_object.__doc__



