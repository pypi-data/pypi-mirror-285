# Generated by Django 4.2.4 on 2024-07-19 07:06

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models

import netbox_swupdate.utils.keys


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("extras", "0098_webhook_custom_field_data_webhook_tags"),
        ("dcim", "0181_rename_device_role_device_role"),
    ]

    operations = [
        migrations.CreateModel(
            name="Deploy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("state", models.CharField(default="STOPPED", max_length=10)),
                ("type", models.CharField(max_length=50)),
                ("deploy_time", models.DateTimeField(blank=True, null=True)),
                ("retries", models.IntegerField(default=0)),
                ("retry_interval", models.IntegerField(default=0)),
                ("max_waiting_time", models.IntegerField(default=1)),
                ("devices", models.ManyToManyField(to="dcim.device")),
            ],
            options={
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("type", models.CharField(max_length=50)),
                (
                    "local_path",
                    models.CharField(
                        blank=True,
                        default="swupdate_firmware_files/",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "s3_bucket_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "s3_access_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "s3_secret_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "docker_registry_url",
                    models.URLField(blank=True, max_length=255, null=True),
                ),
                (
                    "docker_access_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
            ],
            options={
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Software",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("version", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="swupdate_firmware_files/"
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="netbox_swupdate.repository",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
            ],
            options={
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Monitoring",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("status", models.CharField(max_length=50)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("log_message", models.TextField(blank=True, null=True)),
                (
                    "deploy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="netbox_swupdate.deploy",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="dcim.device"
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
            ],
            options={
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="FirmwareRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                (
                    "firmware_request_id",
                    models.UUIDField(
                        default=netbox_swupdate.utils.keys.generate_uuid,
                        editable=False,
                        unique=True,
                    ),
                ),
                ("deploy_time", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(default=0, max_length=50)),
                ("retries", models.IntegerField(default=0)),
                (
                    "deploy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="netbox_swupdate.deploy",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="dcim.device"
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
            ],
            options={
                "ordering": ("pk",),
            },
        ),
        migrations.AddField(
            model_name="deploy",
            name="software",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="netbox_swupdate.software",
            ),
        ),
        migrations.AddField(
            model_name="deploy",
            name="tags",
            field=taggit.managers.TaggableManager(
                through="extras.TaggedItem", to="extras.Tag"
            ),
        ),
    ]
