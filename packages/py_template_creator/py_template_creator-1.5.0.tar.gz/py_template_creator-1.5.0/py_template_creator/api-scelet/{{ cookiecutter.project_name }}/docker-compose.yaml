networks:
  {{ cookiecutter.project_name }}:
    name: {{ cookiecutter.project_name }}

services:
  rest_api:
    build:
      context: rest_api
    image: ${REGISTRY}/rest_api:${APP_VERSION}
    container_name: rest_api_${DOCKER_CONTAINER_SUFFIX}
    environment:
      - DEVELOP
      - APP_VERSION
      - LOG_LEVEL
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PORT
      - REDIS_HOST=${REDIS_DOCKER_HOST}
      - POSTGRES_HOST=${POSTGRES_DOCKER_HOST}
    networks:
      {{ cookiecutter.project_name }}:
        aliases:
          - rest_api
    ports:
      - "8080:80"
    depends_on:
      postgresDB:
        condition: service_healthy
      redisDB:
        condition: service_healthy
      rabbit:
        condition: service_healthy

  postgresDB:
    image: postgres
    container_name: postgres_${DOCKER_CONTAINER_SUFFIX}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - postgresDB:/var/lib/postgresql/data
    networks:
      {{ cookiecutter.project_name }}:
        aliases:
          - ${POSTGRES_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisDB:
    image: redis
    container_name: redis_${DOCKER_CONTAINER_SUFFIX}
    command: redis-server --appendonly yes
    volumes:
      - redisDB:/data
    ports:
      - "6379:6379"
    networks:
      {{ cookiecutter.project_name }}:
        aliases:
        - ${REDIS_HOST}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  rabbit:
    image: rabbitmq:3.13.1-management
    container_name: rabbit_${DOCKER_CONTAINER_SUFFIX}
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      {{ cookiecutter.project_name }}:
        aliases:
          - ${RABBIT_DOCKER_HOST}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s

volumes:
  postgresDB:
    driver: local
  redisDB:
    driver: local