[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Poetry -----------------------------------------------------------------------
[tool.poetry]
name = "django-hashers-passlib-revived"
version = "2.0"
packages = [{include = "hashers_passlib"}]
description = "Django hashers using passlib"
authors = ["Mathias Ertl <mati@er.tl>", "Martin Mahner <martin@elephant.house>"]
license = "GNU General Public License (GPL) v3"
readme = ["README.md", "CHANGELOG.md"]
homepage = "https://github.com/bartTC/django-hashers-passlib-revived/"
classifiers = [
	"Development Status :: 6 - Mature",
	"Programming Language :: Python :: 3 :: Only",
    "Environment :: Other Environment",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration :: Authentication/Directory",
]

[tool.poetry.urls]
Source = "https://github.com/bartTC/django-hashers-passlib-revived/"
Issues = "https://github.com/bartTC/django-hashers-passlib-revived/issues"
Changelog = "https://github.com/bartTC/django-hashers-passlib-revived/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.8"
django = ">=3.2"
passlib = ">=1.7"

[tool.poetry.group.dev.dependencies]
argon2-cffi = "21.3.0"
bcrypt = "3.2.0"
pytest = "*"
pytest-django = "*"
pytest-socket = "*"

# Quality Tools ----------------------------------------------------------------
[tool.ruff]
target-version = "py38"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
  "ARG001",   # Unused function argument (request, ...)
  "ARG002",   # Unused method argument (*args, **kwargs)
  "D",        # Missing or badly formatted docstrings
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)
  "RUF012",   # Mutable class attributes https://github.com/astral-sh/ruff/issues/5243

  # Project specific
  "N801",     # Class name `ldap_pbkdf2_sha512` should use CapWords convention

  # Ruff format
  "COM812",   # Checks for the absence of trailing commas
  "ISC001",   # Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
# Also ignore `E402` in all `__init__.py` files.
"tests.py" = [
  "S101",     # S101 Use of `assert` detected
  "S105",     # Possible hardcoded password
  "PLR2004",  # Magic value used in comparison,
]

[tool.pytest.ini_options]
python_files = ["tests.py",]
addopts = """
    --ds=hashers_passlib.tests.settings
    --nomigrations
    --disable-socket
"""
