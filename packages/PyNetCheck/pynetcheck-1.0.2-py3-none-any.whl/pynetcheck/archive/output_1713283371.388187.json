{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 4}, "tests": {"0": {"status": "ERROR", "message": "self = <pynetcheck.tests.cve.paloalto.test_cve_2024_3400.TestHTTPServerIPF object at 0x000001D14FFDED00>\ndevice = <pynetcheck.models.device.IPFDevice object at 0x000001D14FFEABE0>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def load_device_data(self, device: IPFDevice):\n        if not device.loaded:\n>           device.load_data()\n\ntests\\cve\\paloalto\\test_cve_2024_3400.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmodels\\device.py:40: in load_data\n    self.get_config()\nmodels\\device.py:95: in get_config\n    self._palo_alto_config()\nmodels\\device.py:71: in _palo_alto_config\n    log = self.inventory.get_log_file(self.ipf)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (L1FW4/vsys1, IPFClient(base_url='https://sa-integrations02a.ash-cloud.ipf.cx/api/v6.7/'))\nkwargs = {}\n\n    def wrapper(*args, **kwargs):\n        if arg_type:\n            arg_types = [arg_type] if isinstance(arg_type, str) else arg_type\n            msg = (\n                f\"`{fname}()` no longer accepts parameter of `{arg_type}` and will be removed in version {version}.\"\n            )\n            if args:\n                for arg in args:\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n            if kwargs:\n                for arg in kwargs.values():\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n        elif no_args and (len(args) > 1 or kwargs):\n            warn(\n                f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\",\n                DeprecationWarning,\n                stacklevel=2,\n            )\n            logger.warning(f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\")\n        elif kwargs_only and len(args):\n            msg = (\n                f\"`{fname}()` positional arguments are deprecated and will be removed in version {version}. \"\n                f\"Please switch to keyword arguments only.\"\n            )\n            warn(msg, DeprecationWarning, stacklevel=2)\n            logger.warning(msg)\n>       return func(*args, **kwargs)\nE       TypeError: get_log_file() takes 1 positional argument but 2 were given\n\n..\\.venv\\lib\\site-packages\\ipfabric\\exceptions.py:58: TypeError\n", "test_name": "test_device_telemetry_disabled[L1FW4/vsys1]", "rerun": "0"}, "1": {"status": "ERROR", "message": "self = <pynetcheck.tests.cve.paloalto.test_cve_2024_3400.TestHTTPServerIPF object at 0x000001D14FFDED00>\ndevice = <pynetcheck.models.device.IPFDevice object at 0x000001D14FFEABB0>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def load_device_data(self, device: IPFDevice):\n        if not device.loaded:\n>           device.load_data()\n\ntests\\cve\\paloalto\\test_cve_2024_3400.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmodels\\device.py:40: in load_data\n    self.get_config()\nmodels\\device.py:95: in get_config\n    self._palo_alto_config()\nmodels\\device.py:71: in _palo_alto_config\n    log = self.inventory.get_log_file(self.ipf)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (L35FW3/vsys1, IPFClient(base_url='https://sa-integrations02a.ash-cloud.ipf.cx/api/v6.7/'))\nkwargs = {}\n\n    def wrapper(*args, **kwargs):\n        if arg_type:\n            arg_types = [arg_type] if isinstance(arg_type, str) else arg_type\n            msg = (\n                f\"`{fname}()` no longer accepts parameter of `{arg_type}` and will be removed in version {version}.\"\n            )\n            if args:\n                for arg in args:\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n            if kwargs:\n                for arg in kwargs.values():\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n        elif no_args and (len(args) > 1 or kwargs):\n            warn(\n                f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\",\n                DeprecationWarning,\n                stacklevel=2,\n            )\n            logger.warning(f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\")\n        elif kwargs_only and len(args):\n            msg = (\n                f\"`{fname}()` positional arguments are deprecated and will be removed in version {version}. \"\n                f\"Please switch to keyword arguments only.\"\n            )\n            warn(msg, DeprecationWarning, stacklevel=2)\n            logger.warning(msg)\n>       return func(*args, **kwargs)\nE       TypeError: get_log_file() takes 1 positional argument but 2 were given\n\n..\\.venv\\lib\\site-packages\\ipfabric\\exceptions.py:58: TypeError\n", "test_name": "test_device_telemetry_disabled[L35FW3/vsys1]", "rerun": "0"}, "2": {"status": "ERROR", "message": "self = <pynetcheck.tests.cve.paloalto.test_cve_2024_3400.TestHTTPServerIPF object at 0x000001D14FFDED00>\ndevice = <pynetcheck.models.device.IPFDevice object at 0x000001D14FFEAEB0>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def load_device_data(self, device: IPFDevice):\n        if not device.loaded:\n>           device.load_data()\n\ntests\\cve\\paloalto\\test_cve_2024_3400.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmodels\\device.py:40: in load_data\n    self.get_config()\nmodels\\device.py:95: in get_config\n    self._palo_alto_config()\nmodels\\device.py:71: in _palo_alto_config\n    log = self.inventory.get_log_file(self.ipf)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (hw1-r1-1-PA-3220/vsys1, IPFClient(base_url='https://sa-integrations02a.ash-cloud.ipf.cx/api/v6.7/'))\nkwargs = {}\n\n    def wrapper(*args, **kwargs):\n        if arg_type:\n            arg_types = [arg_type] if isinstance(arg_type, str) else arg_type\n            msg = (\n                f\"`{fname}()` no longer accepts parameter of `{arg_type}` and will be removed in version {version}.\"\n            )\n            if args:\n                for arg in args:\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n            if kwargs:\n                for arg in kwargs.values():\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n        elif no_args and (len(args) > 1 or kwargs):\n            warn(\n                f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\",\n                DeprecationWarning,\n                stacklevel=2,\n            )\n            logger.warning(f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\")\n        elif kwargs_only and len(args):\n            msg = (\n                f\"`{fname}()` positional arguments are deprecated and will be removed in version {version}. \"\n                f\"Please switch to keyword arguments only.\"\n            )\n            warn(msg, DeprecationWarning, stacklevel=2)\n            logger.warning(msg)\n>       return func(*args, **kwargs)\nE       TypeError: get_log_file() takes 1 positional argument but 2 were given\n\n..\\.venv\\lib\\site-packages\\ipfabric\\exceptions.py:58: TypeError\n", "test_name": "test_device_telemetry_disabled[hw1-r1-1-PA-3220/vsys1]", "rerun": "0"}, "3": {"status": "ERROR", "message": "self = <pynetcheck.tests.cve.paloalto.test_cve_2024_3400.TestHTTPServerIPF object at 0x000001D14FFDED00>\ndevice = <pynetcheck.models.device.IPFDevice object at 0x000001D14FFEADC0>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def load_device_data(self, device: IPFDevice):\n        if not device.loaded:\n>           device.load_data()\n\ntests\\cve\\paloalto\\test_cve_2024_3400.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmodels\\device.py:40: in load_data\n    self.get_config()\nmodels\\device.py:95: in get_config\n    self._palo_alto_config()\nmodels\\device.py:71: in _palo_alto_config\n    log = self.inventory.get_log_file(self.ipf)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (hwl-r1-3-PA-3220/vsys1, IPFClient(base_url='https://sa-integrations02a.ash-cloud.ipf.cx/api/v6.7/'))\nkwargs = {}\n\n    def wrapper(*args, **kwargs):\n        if arg_type:\n            arg_types = [arg_type] if isinstance(arg_type, str) else arg_type\n            msg = (\n                f\"`{fname}()` no longer accepts parameter of `{arg_type}` and will be removed in version {version}.\"\n            )\n            if args:\n                for arg in args:\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n            if kwargs:\n                for arg in kwargs.values():\n                    if type(arg).__name__ in arg_types:\n                        warn(msg, DeprecationWarning, stacklevel=2)\n                        logger.warning(msg)\n        elif no_args and (len(args) > 1 or kwargs):\n            warn(\n                f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\",\n                DeprecationWarning,\n                stacklevel=2,\n            )\n            logger.warning(f\"`{fname}()` parameters are deprecated and will be removed in version {version}.\")\n        elif kwargs_only and len(args):\n            msg = (\n                f\"`{fname}()` positional arguments are deprecated and will be removed in version {version}. \"\n                f\"Please switch to keyword arguments only.\"\n            )\n            warn(msg, DeprecationWarning, stacklevel=2)\n            logger.warning(msg)\n>       return func(*args, **kwargs)\nE       TypeError: get_log_file() takes 1 positional argument but 2 were given\n\n..\\.venv\\lib\\site-packages\\ipfabric\\exceptions.py:58: TypeError\n", "test_name": "test_device_telemetry_disabled[hwl-r1-3-PA-3220/vsys1]", "rerun": "0"}}, "suite_name": "tests/cve/paloalto/test_cve_2024_3400.py"}}}, "date": "April 16, 2024", "start_time": 1713277116.0930212, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "4", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "4"}