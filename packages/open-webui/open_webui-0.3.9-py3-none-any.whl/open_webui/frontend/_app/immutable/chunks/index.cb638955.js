import{C as c}from"./index.b8b2aa6c.js";const l=async r=>{let e=null;const o=await fetch(`${c}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),e=t.detail,null));if(e)throw e;return o},h=async(r,e)=>{let o=null;const t=await fetch(`${c}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),o=n.detail,null));if(o)throw o;return t},u=async(r,e)=>{const o=new FormData;o.append("file",e);let t=null;const n=await fetch(`${c}/transcriptions`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${r}`},body:o}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(t=a.detail,console.log(a),null));if(t)throw t;return n},p=async(r="",e="alloy",o="",t)=>{let n=null;const a=await fetch(`${c}/speech`,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({input:o,voice:e,...t&&{model:t}})}).then(async i=>{if(!i.ok)throw await i.json();return i}).catch(i=>(n=i.detail,console.log(i),null));if(n)throw n;return a};export{l as g,p as s,u as t,h as u};
//# sourceMappingURL=index.cb638955.js.map
