# DO NOT MODIFY -- This file is generated by type_spec
# flake8: noqa: F821
# ruff: noqa: E402
# fmt: off
# isort: skip_file
from __future__ import annotations
import typing  # noqa: F401
import datetime  # noqa: F401
from decimal import Decimal  # noqa: F401
from pkgs.strenum_compat import StrEnum
from dataclasses import dataclass
from pkgs.serialization import serial_class
from pkgs.serialization import serial_union_annotation
from ... import identifier as identifier_t

__all__: list[str] = [
    "Arguments",
    "Data",
    "ENDPOINT_METHOD",
    "ENDPOINT_PATH",
    "RecipeLock",
    "RecipeLockAll",
    "RecipeLockBase",
    "RecipeLockInputs",
    "RecipeLockType",
]

ENDPOINT_METHOD = "POST"
ENDPOINT_PATH = "api/external/recipes/lock_recipes"


# DO NOT MODIFY -- This file is generated by type_spec
class RecipeLockType(StrEnum):
    ALL = "all"
    INPUTS_ONLY = "inputs_only"


# DO NOT MODIFY -- This file is generated by type_spec
@dataclass(kw_only=True)
class RecipeLockBase:
    recipe: identifier_t.IdentifierKey
    globally_removable: bool
    type: RecipeLockType
    lock_samples: typing.Optional[bool] = None
    comments: typing.Optional[str] = None


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    parse_require={"type"},
)
@dataclass(kw_only=True)
class RecipeLockAll(RecipeLockBase):
    type: typing.Literal[RecipeLockType.ALL] = RecipeLockType.ALL


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    parse_require={"type"},
)
@dataclass(kw_only=True)
class RecipeLockInputs(RecipeLockBase):
    type: typing.Literal[RecipeLockType.INPUTS_ONLY] = RecipeLockType.INPUTS_ONLY


# DO NOT MODIFY -- This file is generated by type_spec
RecipeLock = typing.Annotated[
    typing.Union[RecipeLockAll, RecipeLockInputs],
    serial_union_annotation(
        discriminator="type",
        discriminator_map={
            "all": RecipeLockAll,
            "inputs_only": RecipeLockInputs,
        },
    ),
]


# DO NOT MODIFY -- This file is generated by type_spec
@dataclass(kw_only=True)
class Arguments:
    locks: list[RecipeLock]


# DO NOT MODIFY -- This file is generated by type_spec
@dataclass(kw_only=True)
class Data:
    pass
# DO NOT MODIFY -- This file is generated by type_spec
