## @param version [string] The version of the configuration file.
version: v1alpha1

## @section Controller Configuration

controller:
  ## @param controller.pidFile [string, default: /opt/premiscale/premiscale.pid] Path to the file where the controller daemon process writes its PID.
  pidFile: /opt/premiscale/premiscale.pid

  ## @param controller.mode [string, default: standalone] The mode of the controller. Can be 'kubernetes' or 'standalone'. If 'standalone', the controller will not attempt to connect to a Kubernetes cluster autoscaler. If 'kubernetes', the controller will attempt to connect to the Kubernetes cluster autoscaler.
  mode: standalone

  kubernetes:
    ## @param controller.kubernetes.autoscalerPort [default: 8080] The port on which the Kubernetes autoscaler is listening.
    autoscalerPort: 8085

    ## @param controller.kubernetes.autoscalerHost [string, default: cluster-autoscaler] The host on which the Kubernetes autoscaler is running. See also the cluster autoscaler Helm chart: https://github.com/premiscale/kubernetes-autoscaler/tree/master/charts/cluster-autoscaler.
    autoscalerHost: cluster-autoscaler

  ## @section Healthcheck Configuration

  ## @param controller.healthcheck [object] Configure the healthcheck endpoint for the controller.
  healthcheck:
    ## @param controller.healthcheck.host [string, default: 127.0.0.1] The host to bind the healthcheck endpoint to.
    host: 127.0.0.1

    ## @param controller.healthcheck.port [default: 8085] The port to bind the healthcheck endpoint to.
    port: 8085

  ## @section Database Configuration

  databases:
    ## @param controller.databases.maxHostConnectionThreads [default: 10] The maximum number of threads to use for connecting to hosts.
    maxHostConnectionThreads: 10

    ## @param controller.databases.hostConnectionQueueSize [default: 10] The maximum number of host connections to queue up at a time for the host connection threads to process. Defaults to the same value as 'controller.databases.maxHostConnectionThreads'.
    # hostConnectionQueueSize: 10

    ## @param controller.databases.collectionInterval [default: 60] How often the agent retrieves state from all of the connected hosts.
    collectionInterval: 60

    ## @param controller.databases.hostConnectionTimeout [default: 60] How long to wait for a connection to a host before timing out.
    hostConnectionTimeout: 60

    state:
      ## @param controller.databases.state.type [string, default: memory] The type of database to use for storing state. Can be 'mysql' or 'sqlite' or 'memory'.
      type: memory

    timeseries:
      ## @param controller.databases.timeseries.type [string, default: memory] The type of database to use for storing time series data. At this time, can be 'influxdb' or 'memory'.
      type: memory

      ## @param controller.databases.timeseries.dbfile [string, default: /opt/premiscale/timeseries.db] If using the 'memory' type, the path to the file where the time series data is stored as a CSV format.
      # dbfile: /opt/premiscale/timeseries.csv

      ## @param controller.databases.timeseries.retention [default: 300] How long to keep time series data in the database.
      retention: 300

  ## @section Platform Configuration

  ## @param controller.platform [object] Configure the platform
  platform:
    ## @param controller.platform.actionsQueueMax [default: 0] The maximum number of inbound actions from the platform to queue up before dropping them. 0 means no limit.
    actionsQueueMaxSize: 0

    ## @param controller.platform.domain [string, default: $PREMISCALE_PLATFORM] The domain of the platform.
    domain: $PREMISCALE_PLATFORM

    ## @param controller.platform.token [string, default: $PREMISCALE_TOKEN] The token to use to authenticate with the platform.
    token: $PREMISCALE_TOKEN

    ## @param controller.platform.certificates [object] For local-only testing, you can provide self-signed certificates to the controller for connection to the platform services.
    certificates:
      ## @param controller.platform.certificates.path [string, default: /opt/premiscale/certs] Path to a directory containing the controller's certificates.
      path: $PREMISCALE_CACERT

  ## @section Reconciliation Configuration

  reconciliation:
    ## @param controller.reconciliation.interval [default: 60] How often the controller reconciles the state of the ASGs. The controller collects time series and state in separate databases and queues up actions for autoscaling groups.
    interval: 60

  ## @section Autoscaling Configuration

  autoscale:
    ## @param controller.autoscale.hosts [array] Groups of hosts to assign to ASGs.
    hosts: []

    ## @param controller.autoscale.groups [object] Specify and configure autoscaling groups on the hosts above.
    groups: {}