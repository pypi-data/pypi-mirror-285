from ..errors import FatalClientError as FatalClientError, InvalidClientError as InvalidClientError, InvalidRequestError as InvalidRequestError, OAuth2Error as OAuth2Error, ServerError as ServerError, TemporarilyUnavailableError as TemporarilyUnavailableError, UnsupportedTokenTypeError as UnsupportedTokenTypeError
from _typeshed import Incomplete

log: Incomplete

class BaseEndpoint:
    def __init__(self) -> None: ...
    @property
    def valid_request_methods(self): ...
    @valid_request_methods.setter
    def valid_request_methods(self, valid_request_methods) -> None: ...
    @property
    def available(self): ...
    @available.setter
    def available(self, available) -> None: ...
    @property
    def catch_errors(self): ...
    @catch_errors.setter
    def catch_errors(self, catch_errors) -> None: ...

def catch_errors_and_unavailability(f): ...
