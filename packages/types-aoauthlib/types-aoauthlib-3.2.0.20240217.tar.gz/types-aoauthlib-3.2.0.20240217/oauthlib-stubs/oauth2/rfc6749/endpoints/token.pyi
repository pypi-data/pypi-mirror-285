from .base import BaseEndpoint as BaseEndpoint, catch_errors_and_unavailability as catch_errors_and_unavailability
from _typeshed import Incomplete
from oauthlib.common import Request as Request
from oauthlib.oauth2.rfc6749 import utils as utils

log: Incomplete

class TokenEndpoint(BaseEndpoint):
    valid_request_methods: Incomplete
    def __init__(self, default_grant_type, default_token_type, grant_types) -> None: ...
    @property
    def grant_types(self): ...
    @property
    def default_grant_type(self): ...
    @property
    def default_grant_type_handler(self): ...
    @property
    def default_token_type(self): ...
    async def create_token_response(self, uri, http_method: str = 'POST', body: Incomplete | None = None, headers: Incomplete | None = None, credentials: Incomplete | None = None, grant_type_for_scope: Incomplete | None = None, claims: Incomplete | None = None): ...
    def validate_token_request(self, request) -> None: ...
