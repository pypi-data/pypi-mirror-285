from .errors import InsecureTransportError as InsecureTransportError, MismatchingStateError as MismatchingStateError, MissingCodeError as MissingCodeError, MissingTokenError as MissingTokenError, MissingTokenTypeError as MissingTokenTypeError, raise_from_error as raise_from_error
from .tokens import OAuth2Token as OAuth2Token
from .utils import is_secure_transport as is_secure_transport, list_to_scope as list_to_scope, scope_to_list as scope_to_list
from _typeshed import Incomplete
from oauthlib.common import add_params_to_qs as add_params_to_qs, add_params_to_uri as add_params_to_uri
from oauthlib.signals import scope_changed as scope_changed

def prepare_grant_uri(uri, client_id, response_type, redirect_uri: Incomplete | None = None, scope: Incomplete | None = None, state: Incomplete | None = None, code_challenge: Incomplete | None = None, code_challenge_method: str = 'plain', **kwargs): ...
def prepare_token_request(grant_type, body: str = '', include_client_id: bool = True, code_verifier: Incomplete | None = None, **kwargs): ...
def prepare_token_revocation_request(url, token, token_type_hint: str = 'access_token', callback: Incomplete | None = None, body: str = '', **kwargs): ...
def parse_authorization_code_response(uri, state: Incomplete | None = None): ...
def parse_implicit_response(uri, state: Incomplete | None = None, scope: Incomplete | None = None): ...
def parse_token_response(body, scope: Incomplete | None = None): ...
def validate_token_parameters(params) -> None: ...
