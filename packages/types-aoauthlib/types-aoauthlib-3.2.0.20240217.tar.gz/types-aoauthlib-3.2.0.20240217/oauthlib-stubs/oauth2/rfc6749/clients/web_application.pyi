from ..parameters import parse_authorization_code_response as parse_authorization_code_response, prepare_grant_uri as prepare_grant_uri, prepare_token_request as prepare_token_request
from .base import Client as Client
from _typeshed import Incomplete

class WebApplicationClient(Client):
    grant_type: str
    code: Incomplete
    def __init__(self, client_id, code: Incomplete | None = None, **kwargs) -> None: ...
    def prepare_request_uri(self, uri, redirect_uri: Incomplete | None = None, scope: Incomplete | None = None, state: Incomplete | None = None, code_challenge: Incomplete | None = None, code_challenge_method: str = 'plain', **kwargs): ...
    def prepare_request_body(self, code: Incomplete | None = None, redirect_uri: Incomplete | None = None, body: str = '', include_client_id: bool = True, code_verifier: Incomplete | None = None, **kwargs): ...
    def parse_request_uri_response(self, uri, state: Incomplete | None = None): ...
