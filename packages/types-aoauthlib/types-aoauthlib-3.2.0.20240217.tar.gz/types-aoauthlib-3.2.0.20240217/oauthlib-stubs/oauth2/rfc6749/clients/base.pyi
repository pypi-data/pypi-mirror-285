from _typeshed import Incomplete
from oauthlib.common import generate_token as generate_token
from oauthlib.oauth2.rfc6749 import tokens as tokens
from oauthlib.oauth2.rfc6749.errors import InsecureTransportError as InsecureTransportError, TokenExpiredError as TokenExpiredError
from oauthlib.oauth2.rfc6749.parameters import parse_token_response as parse_token_response, prepare_token_request as prepare_token_request, prepare_token_revocation_request as prepare_token_revocation_request
from oauthlib.oauth2.rfc6749.utils import is_secure_transport as is_secure_transport

AUTH_HEADER: str
URI_QUERY: str
BODY: str
FORM_ENC_HEADERS: Incomplete

class Client:
    refresh_token_key: str
    client_id: Incomplete
    default_token_placement: Incomplete
    token_type: Incomplete
    access_token: Incomplete
    refresh_token: Incomplete
    mac_key: Incomplete
    mac_algorithm: Incomplete
    token: Incomplete
    scope: Incomplete
    state_generator: Incomplete
    state: Incomplete
    redirect_url: Incomplete
    code_verifier: Incomplete
    code_challenge: Incomplete
    code_challenge_method: Incomplete
    code: Incomplete
    expires_in: Incomplete
    def __init__(self, client_id, default_token_placement=..., token_type: str = 'Bearer', access_token: Incomplete | None = None, refresh_token: Incomplete | None = None, mac_key: Incomplete | None = None, mac_algorithm: Incomplete | None = None, token: Incomplete | None = None, scope: Incomplete | None = None, state: Incomplete | None = None, redirect_url: Incomplete | None = None, state_generator=..., code_verifier: Incomplete | None = None, code_challenge: Incomplete | None = None, code_challenge_method: Incomplete | None = None, **kwargs) -> None: ...
    @property
    def token_types(self): ...
    def prepare_request_uri(self, *args, **kwargs) -> None: ...
    def prepare_request_body(self, *args, **kwargs) -> None: ...
    def parse_request_uri_response(self, *args, **kwargs) -> None: ...
    def add_token(self, uri, http_method: str = 'GET', body: Incomplete | None = None, headers: Incomplete | None = None, token_placement: Incomplete | None = None, **kwargs): ...
    def prepare_authorization_request(self, authorization_url, state: Incomplete | None = None, redirect_url: Incomplete | None = None, scope: Incomplete | None = None, **kwargs): ...
    def prepare_token_request(self, token_url, authorization_response: Incomplete | None = None, redirect_url: Incomplete | None = None, state: Incomplete | None = None, body: str = '', **kwargs): ...
    def prepare_refresh_token_request(self, token_url, refresh_token: Incomplete | None = None, body: str = '', scope: Incomplete | None = None, **kwargs): ...
    def prepare_token_revocation_request(self, revocation_url, token, token_type_hint: str = 'access_token', body: str = '', callback: Incomplete | None = None, **kwargs): ...
    def parse_request_body_response(self, body, scope: Incomplete | None = None, **kwargs): ...
    def prepare_refresh_body(self, body: str = '', refresh_token: Incomplete | None = None, scope: Incomplete | None = None, **kwargs): ...
    def create_code_verifier(self, length): ...
    def create_code_challenge(self, code_verifier, code_challenge_method: Incomplete | None = None): ...
    def populate_code_attributes(self, response) -> None: ...
    def populate_token_attributes(self, response) -> None: ...
