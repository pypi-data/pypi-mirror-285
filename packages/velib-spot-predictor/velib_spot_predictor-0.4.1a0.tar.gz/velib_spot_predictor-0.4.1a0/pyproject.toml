[tool.poetry]
name = "velib-spot-predictor"
version = "0.4.1a0"
description = "Predicting spots at Velib stations"
authors = ["Clément Côme <clement.come98@gmail.com>"]
readme = "README.md"
packages = [{ include = "velib_spot_predictor" }]

[tool.poetry.scripts]
build_model = "velib_spot_predictor.model.save_model:save_model"
fetch_data = "velib_spot_predictor.data.cli:fetch_data"
fill_station_information_table = "velib_spot_predictor.data.cli:fill_station_information_table"
load_data_from_local_to_sql = "velib_spot_predictor.data.cli:load_to_sql"

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<3.13"
numpy = "^1.25.2"
pandas = "^2.1.0"
scikit-learn = "^1.3.0"
click = "^8.1.7"
fastapi = "^0.103.0"
uvicorn = "^0.23.2"
requests = "^2.31.0"
tqdm = "^4.66.1"
boto3 = "^1.28.40"
pydantic = "^2.3.0"
pydantic-settings = "^2.0.3"
loguru = "^0.7.2"
geopandas = "^0.13.2"
scipy = "^1.11.2"
sqlalchemy = "^2.0.21"
mysql-connector-python = "^8.1.0"
alembic = "^1.12.0"
boto3-stubs = { extras = ["essential"], version = "^1.34.144" }


[tool.poetry.group.front]
optional = true
[tool.poetry.group.front.dependencies]
plotly = "^5.16.1"
dash = "^2.13.0"
dash-leaflet = "^1.0.8"
dash-extensions = "^1.0.3"
dash-bootstrap-components = "^1.5.0"
gunicorn = "^21.2.0"


[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-asyncio = "^0.21.1"
httpx = "^0.24.1"
pytest-env = "^1.0.1"
time-machine = "^2.14.1"
pytest-loguru = "^0.4.0"


[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"

[tool.poetry.group.lint]
optional = true
[tool.poetry.group.lint.dependencies]
ruff = ">=0.4.2"
mypy = "^1.10.1"
pandas-stubs = "^2.2.2.240603"
types-pytz = "^2024.1.0.20240417"
types-shapely = "^2.0.0.20240714"
types-tqdm = "^4.66.0.20240417"

[tool.poetry.group.jupyter]
optional = true
[tool.poetry.group.jupyter.dependencies]
jupyter = "^1.0.0"
matplotlib = "^3.7.2"
seaborn = "^0.12.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
include = ["velib_spot_predictor/**/*.py", "tests/**/*.py"]
exclude = ["velib_spot_predictor/data/database/alembic"]

[tool.ruff.lint]
select = ["B", "D", "E", "F", "I", "N", "PL", "S", "W"]
ignore = ["S301"]
pydocstyle.convention = "numpy"

[[tool.mypy.overrides]]
module = [
    "dash.*",
    "plotly.*",
    "dash_bootstrap_components.*",
    "requests.*",
    "sklearn.*",
    "joblib.*",
    "geopandas.*",
    "scipy.*",
    "dash_leaflet.*",
    "dash_extensions.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "-v",
    "--cov=velib_spot_predictor",
    "--cov-report=xml",
    "--cov-report=term-missing",
    "--cov-fail-under=70",
]
env = [
    "S3_AWS_ACCESS_KEY_ID=fake_access_key_id",
    "S3_AWS_SECRET_ACCESS_KEY=fake_secret_access_key",
    "S3_REGION_NAME=fake_region_name",
    "S3_VELIB_RAW_BUCKET=fake_bucket",
]

[tool.coverage.run]
omit = ["velib_spot_predictor/front/*"]
