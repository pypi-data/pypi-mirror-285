# generated by datamodel-codegen:
#   filename:  geomCircle.json
#   timestamp: 2024-07-19T10:41:17+00:00

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field, PositiveFloat
from typing_extensions import Literal


class IGeomCircle(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    TypeId: Literal['Part::GeomCircle'] = Field(..., description='Geometry type')
    CenterX: float = Field(..., description='CenterX')
    CenterY: float = Field(..., description='CenterY')
    CenterZ: float = Field(..., description='CenterZ')
    NormalX: float = Field(..., description='NormalX')
    NormalY: float = Field(..., description='NormalY')
    NormalZ: float = Field(..., description='NormalZ')
    AngleXU: float = Field(..., description='AngleXU')
    Radius: PositiveFloat = Field(..., description='Radius')
