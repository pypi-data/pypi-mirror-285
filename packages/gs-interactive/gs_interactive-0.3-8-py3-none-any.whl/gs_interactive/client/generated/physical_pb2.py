# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: physical.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import expr_pb2 as expr__pb2
import schema_pb2 as schema__pb2
import type_pb2 as type__pb2
import algebra_pb2 as algebra__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0ephysical.proto\x12\x08physical\x1a\x0c\x63ommon.proto\x1a\nexpr.proto\x1a\x0cschema.proto\x1a\ntype.proto\x1a\ralgebra.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xa6\x01\n\x07Project\x12-\n\x08mappings\x18\x01 \x03(\x0b\x32\x1b.physical.Project.ExprAlias\x12\x11\n\tis_append\x18\x02 \x01(\x08\x1aY\n\tExprAlias\x12 \n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x12.common.Expression\x12*\n\x05\x61lias\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"\xc0\x03\n\x07GroupBy\x12,\n\x08mappings\x18\x01 \x03(\x0b\x32\x1a.physical.GroupBy.KeyAlias\x12,\n\tfunctions\x18\x02 \x03(\x0b\x32\x19.physical.GroupBy.AggFunc\x1a\x81\x02\n\x07\x41ggFunc\x12\x1e\n\x04vars\x18\x01 \x03(\x0b\x32\x10.common.Variable\x12\x36\n\taggregate\x18\x02 \x01(\x0e\x32#.physical.GroupBy.AggFunc.Aggregate\x12*\n\x05\x61lias\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"r\n\tAggregate\x12\x07\n\x03SUM\x10\x00\x12\x07\n\x03MIN\x10\x01\x12\x07\n\x03MAX\x10\x02\x12\t\n\x05\x43OUNT\x10\x03\x12\x12\n\x0e\x43OUNT_DISTINCT\x10\x04\x12\x0b\n\x07TO_LIST\x10\x05\x12\n\n\x06TO_SET\x10\x06\x12\x07\n\x03\x41VG\x10\x07\x12\t\n\x05\x46IRST\x10\x08\x1aU\n\x08KeyAlias\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x10.common.Variable\x12*\n\x05\x61lias\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"^\n\x06Unfold\x12(\n\x03tag\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12*\n\x05\x61lias\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"2\n\x05Union\x12)\n\tsub_plans\x18\x01 \x03(\x0b\x32\x16.physical.PhysicalPlan\"C\n\tIntersect\x12)\n\tsub_plans\x18\x01 \x03(\x0b\x32\x16.physical.PhysicalPlan\x12\x0b\n\x03key\x18\x02 \x01(\x05\"\xbb\x02\n\x04Join\x12#\n\tleft_keys\x18\x01 \x03(\x0b\x32\x10.common.Variable\x12$\n\nright_keys\x18\x02 \x03(\x0b\x32\x10.common.Variable\x12*\n\tjoin_kind\x18\x03 \x01(\x0e\x32\x17.physical.Join.JoinKind\x12)\n\tleft_plan\x18\x04 \x01(\x0b\x32\x16.physical.PhysicalPlan\x12*\n\nright_plan\x18\x05 \x01(\x0b\x32\x16.physical.PhysicalPlan\"e\n\x08JoinKind\x12\t\n\x05INNER\x10\x00\x12\x0e\n\nLEFT_OUTER\x10\x01\x12\x0f\n\x0bRIGHT_OUTER\x10\x02\x12\x0e\n\nFULL_OUTER\x10\x03\x12\x08\n\x04SEMI\x10\x04\x12\x08\n\x04\x41NTI\x10\x05\x12\t\n\x05TIMES\x10\x06\"\xa9\x01\n\x05\x41pply\x12*\n\tjoin_kind\x18\x01 \x01(\x0e\x32\x17.physical.Join.JoinKind\x12\x1e\n\x04keys\x18\x02 \x03(\x0b\x32\x10.common.Variable\x12(\n\x08sub_plan\x18\x03 \x01(\x0b\x32\x16.physical.PhysicalPlan\x12*\n\x05\x61lias\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"\xf5\x01\n\x04Scan\x12(\n\x08scan_opt\x18\x01 \x01(\x0e\x32\x16.physical.Scan.ScanOpt\x12*\n\x05\x61lias\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12$\n\x06params\x18\x03 \x01(\x0b\x32\x14.algebra.QueryParams\x12.\n\ridx_predicate\x18\x04 \x01(\x0b\x32\x17.algebra.IndexPredicate\x12\x15\n\ris_count_only\x18\x05 \x01(\x08\"*\n\x07ScanOpt\x12\n\n\x06VERTEX\x10\x00\x12\x08\n\x04\x45\x44GE\x10\x01\x12\t\n\x05TABLE\x10\x02\"\xe1\x01\n\x04GetV\x12(\n\x03tag\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12 \n\x03opt\x18\x02 \x01(\x0e\x32\x13.physical.GetV.VOpt\x12$\n\x06params\x18\x03 \x01(\x0b\x32\x14.algebra.QueryParams\x12*\n\x05\x61lias\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\";\n\x04VOpt\x12\t\n\x05START\x10\x00\x12\x07\n\x03\x45ND\x10\x01\x12\t\n\x05OTHER\x10\x02\x12\x08\n\x04\x42OTH\x10\x03\x12\n\n\x06ITSELF\x10\x04\"\xdd\x02\n\nEdgeExpand\x12*\n\x05v_tag\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x31\n\tdirection\x18\x02 \x01(\x0e\x32\x1e.physical.EdgeExpand.Direction\x12$\n\x06params\x18\x03 \x01(\x0b\x32\x14.algebra.QueryParams\x12*\n\x05\x61lias\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x32\n\nexpand_opt\x18\x05 \x01(\x0e\x32\x1e.physical.EdgeExpand.ExpandOpt\x12\x13\n\x0bis_optional\x18\x06 \x01(\x08\"&\n\tDirection\x12\x07\n\x03OUT\x10\x00\x12\x06\n\x02IN\x10\x01\x12\x08\n\x04\x42OTH\x10\x02\"-\n\tExpandOpt\x12\n\n\x06VERTEX\x10\x00\x12\x08\n\x04\x45\x44GE\x10\x01\x12\n\n\x06\x44\x45GREE\x10\x02\"\x88\x04\n\nPathExpand\x12-\n\x04\x62\x61se\x18\x01 \x01(\x0b\x32\x1f.physical.PathExpand.ExpandBase\x12.\n\tstart_tag\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12*\n\x05\x61lias\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12!\n\thop_range\x18\x04 \x01(\x0b\x32\x0e.algebra.Range\x12.\n\x08path_opt\x18\x05 \x01(\x0e\x32\x1c.physical.PathExpand.PathOpt\x12\x32\n\nresult_opt\x18\x06 \x01(\x0e\x32\x1e.physical.PathExpand.ResultOpt\x12%\n\tcondition\x18\x07 \x01(\x0b\x32\x12.common.Expression\x12\x13\n\x0bis_optional\x18\x08 \x01(\x08\x1aV\n\nExpandBase\x12)\n\x0b\x65\x64ge_expand\x18\x01 \x01(\x0b\x32\x14.physical.EdgeExpand\x12\x1d\n\x05get_V\x18\x02 \x01(\x0b\x32\x0e.physical.GetV\"$\n\x07PathOpt\x12\r\n\tARBITRARY\x10\x00\x12\n\n\x06SIMPLE\x10\x01\".\n\tResultOpt\x12\t\n\x05\x45ND_V\x10\x00\x12\t\n\x05\x41LL_V\x10\x01\x12\x0b\n\x07\x41LL_V_E\x10\x02\"\x8e\x01\n\x04Sink\x12#\n\x04tags\x18\x01 \x03(\x0b\x32\x15.physical.Sink.OptTag\x12-\n\x0bsink_target\x18\x02 \x01(\x0b\x32\x18.algebra.Sink.SinkTarget\x1a\x32\n\x06OptTag\x12(\n\x03tag\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\"\xce\x01\n\x0bRepartition\x12\x33\n\nto_another\x18\x01 \x01(\x0b\x32\x1d.physical.Repartition.ShuffleH\x00\x12\x34\n\tto_others\x18\x02 \x01(\x0b\x32\x1f.physical.Repartition.BroadcastH\x00\x1a;\n\x07Shuffle\x12\x30\n\x0bshuffle_key\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x1a\x0b\n\tBroadcastB\n\n\x08Strategy\"\x06\n\x04Root\"\xeb\x06\n\x0bPhysicalOpr\x12+\n\x03opr\x18\x01 \x01(\x0b\x32\x1e.physical.PhysicalOpr.Operator\x12\x31\n\tmeta_data\x18\x02 \x03(\x0b\x32\x1e.physical.PhysicalOpr.MetaData\x1a\xbe\x05\n\x08Operator\x12$\n\x07project\x18\x01 \x01(\x0b\x32\x11.physical.ProjectH\x00\x12!\n\x06select\x18\x02 \x01(\x0b\x32\x0f.algebra.SelectH\x00\x12%\n\x08group_by\x18\x03 \x01(\x0b\x32\x11.physical.GroupByH\x00\x12$\n\x08order_by\x18\x04 \x01(\x0b\x32\x10.algebra.OrderByH\x00\x12\x1f\n\x05\x64\x65\x64up\x18\x05 \x01(\x0b\x32\x0e.algebra.DedupH\x00\x12\"\n\x06unfold\x18\x06 \x01(\x0b\x32\x10.physical.UnfoldH\x00\x12\x1f\n\x05limit\x18\x07 \x01(\x0b\x32\x0e.algebra.LimitH\x00\x12\x1e\n\x04scan\x18\x08 \x01(\x0b\x32\x0e.physical.ScanH\x00\x12\x1e\n\x04sink\x18\t \x01(\x0b\x32\x0e.physical.SinkH\x00\x12 \n\x05\x61pply\x18\n \x01(\x0b\x32\x0f.physical.ApplyH\x00\x12\x1e\n\x04join\x18\x0b \x01(\x0b\x32\x0e.physical.JoinH\x00\x12 \n\x05union\x18\x0c \x01(\x0b\x32\x0f.physical.UnionH\x00\x12(\n\tintersect\x18\r \x01(\x0b\x32\x13.physical.IntersectH\x00\x12,\n\x0brepartition\x18\x0e \x01(\x0b\x32\x15.physical.RepartitionH\x00\x12\x1e\n\x04root\x18\x10 \x01(\x0b\x32\x0e.physical.RootH\x00\x12!\n\x06sample\x18\x11 \x01(\x0b\x32\x0f.algebra.SampleH\x00\x12 \n\x06vertex\x18\x1e \x01(\x0b\x32\x0e.physical.GetVH\x00\x12$\n\x04\x65\x64ge\x18\x1f \x01(\x0b\x32\x14.physical.EdgeExpandH\x00\x12$\n\x04path\x18  \x01(\x0b\x32\x14.physical.PathExpandH\x00\x42\t\n\x07op_kind\x1a;\n\x08MetaData\x12 \n\x04type\x18\x01 \x01(\x0b\x32\x12.common.IrDataType\x12\r\n\x05\x61lias\x18\x02 \x01(\x05\"D\n\x0cPhysicalPlan\x12\x0f\n\x07plan_id\x18\x01 \x01(\x05\x12#\n\x04plan\x18\x02 \x03(\x0b\x32\x15.physical.PhysicalOprB9\n!com.alibaba.graphscope.gaia.protoB\x14GraphAlgebraPhysicalb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'physical_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n!com.alibaba.graphscope.gaia.protoB\024GraphAlgebraPhysical'
  _globals['_PROJECT']._serialized_start=128
  _globals['_PROJECT']._serialized_end=294
  _globals['_PROJECT_EXPRALIAS']._serialized_start=205
  _globals['_PROJECT_EXPRALIAS']._serialized_end=294
  _globals['_GROUPBY']._serialized_start=297
  _globals['_GROUPBY']._serialized_end=745
  _globals['_GROUPBY_AGGFUNC']._serialized_start=401
  _globals['_GROUPBY_AGGFUNC']._serialized_end=658
  _globals['_GROUPBY_AGGFUNC_AGGREGATE']._serialized_start=544
  _globals['_GROUPBY_AGGFUNC_AGGREGATE']._serialized_end=658
  _globals['_GROUPBY_KEYALIAS']._serialized_start=660
  _globals['_GROUPBY_KEYALIAS']._serialized_end=745
  _globals['_UNFOLD']._serialized_start=747
  _globals['_UNFOLD']._serialized_end=841
  _globals['_UNION']._serialized_start=843
  _globals['_UNION']._serialized_end=893
  _globals['_INTERSECT']._serialized_start=895
  _globals['_INTERSECT']._serialized_end=962
  _globals['_JOIN']._serialized_start=965
  _globals['_JOIN']._serialized_end=1280
  _globals['_JOIN_JOINKIND']._serialized_start=1179
  _globals['_JOIN_JOINKIND']._serialized_end=1280
  _globals['_APPLY']._serialized_start=1283
  _globals['_APPLY']._serialized_end=1452
  _globals['_SCAN']._serialized_start=1455
  _globals['_SCAN']._serialized_end=1700
  _globals['_SCAN_SCANOPT']._serialized_start=1658
  _globals['_SCAN_SCANOPT']._serialized_end=1700
  _globals['_GETV']._serialized_start=1703
  _globals['_GETV']._serialized_end=1928
  _globals['_GETV_VOPT']._serialized_start=1869
  _globals['_GETV_VOPT']._serialized_end=1928
  _globals['_EDGEEXPAND']._serialized_start=1931
  _globals['_EDGEEXPAND']._serialized_end=2280
  _globals['_EDGEEXPAND_DIRECTION']._serialized_start=2195
  _globals['_EDGEEXPAND_DIRECTION']._serialized_end=2233
  _globals['_EDGEEXPAND_EXPANDOPT']._serialized_start=2235
  _globals['_EDGEEXPAND_EXPANDOPT']._serialized_end=2280
  _globals['_PATHEXPAND']._serialized_start=2283
  _globals['_PATHEXPAND']._serialized_end=2803
  _globals['_PATHEXPAND_EXPANDBASE']._serialized_start=2631
  _globals['_PATHEXPAND_EXPANDBASE']._serialized_end=2717
  _globals['_PATHEXPAND_PATHOPT']._serialized_start=2719
  _globals['_PATHEXPAND_PATHOPT']._serialized_end=2755
  _globals['_PATHEXPAND_RESULTOPT']._serialized_start=2757
  _globals['_PATHEXPAND_RESULTOPT']._serialized_end=2803
  _globals['_SINK']._serialized_start=2806
  _globals['_SINK']._serialized_end=2948
  _globals['_SINK_OPTTAG']._serialized_start=2898
  _globals['_SINK_OPTTAG']._serialized_end=2948
  _globals['_REPARTITION']._serialized_start=2951
  _globals['_REPARTITION']._serialized_end=3157
  _globals['_REPARTITION_SHUFFLE']._serialized_start=3073
  _globals['_REPARTITION_SHUFFLE']._serialized_end=3132
  _globals['_REPARTITION_BROADCAST']._serialized_start=3134
  _globals['_REPARTITION_BROADCAST']._serialized_end=3145
  _globals['_ROOT']._serialized_start=3159
  _globals['_ROOT']._serialized_end=3165
  _globals['_PHYSICALOPR']._serialized_start=3168
  _globals['_PHYSICALOPR']._serialized_end=4043
  _globals['_PHYSICALOPR_OPERATOR']._serialized_start=3280
  _globals['_PHYSICALOPR_OPERATOR']._serialized_end=3982
  _globals['_PHYSICALOPR_METADATA']._serialized_start=3984
  _globals['_PHYSICALOPR_METADATA']._serialized_end=4043
  _globals['_PHYSICALPLAN']._serialized_start=4045
  _globals['_PHYSICALPLAN']._serialized_end=4113
# @@protoc_insertion_point(module_scope)
