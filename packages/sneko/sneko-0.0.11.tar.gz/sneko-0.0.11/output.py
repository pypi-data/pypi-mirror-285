ABI=[{"inputs": [{"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}, {"internalType": "bytes32", "name": "root", "type": "bytes32"}, {"internalType": "bytes32", "name": "leaf", "type": "bytes32"}, {"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "verify", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "pure", "type": "function"}]
BYTECODE="6080604052348015600e575f80fd5b506104db8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806321fb335c1461002d575b5f80fd5b610047600480360381019061004291906102ed565b61005d565b6040516100549190610387565b60405180910390f35b5f808390505f5b8651811015610117575f878281518110610081576100806103a0565b5b602002602001015190505f60028661009991906103fa565b036100ce5782816040516020016100b192919061044a565b6040516020818303038152906040528051906020012092506100fa565b80836040516020016100e192919061044a565b6040516020818303038152906040528051906020012092505b6002856101079190610475565b9450508080600101915050610064565b50848114915050949350505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101818261013b565b810181811067ffffffffffffffff821117156101a05761019f61014b565b5b80604052505050565b5f6101b2610126565b90506101be8282610178565b919050565b5f67ffffffffffffffff8211156101dd576101dc61014b565b5b602082029050602081019050919050565b5f80fd5b5f819050919050565b610204816101f2565b811461020e575f80fd5b50565b5f8135905061021f816101fb565b92915050565b5f610237610232846101c3565b6101a9565b9050808382526020820190506020840283018581111561025a576102596101ee565b5b835b81811015610283578061026f8882610211565b84526020840193505060208101905061025c565b5050509392505050565b5f82601f8301126102a1576102a0610137565b5b81356102b1848260208601610225565b91505092915050565b5f819050919050565b6102cc816102ba565b81146102d6575f80fd5b50565b5f813590506102e7816102c3565b92915050565b5f805f80608085870312156103055761030461012f565b5b5f85013567ffffffffffffffff81111561032257610321610133565b5b61032e8782880161028d565b945050602061033f87828801610211565b935050604061035087828801610211565b9250506060610361878288016102d9565b91505092959194509250565b5f8115159050919050565b6103818161036d565b82525050565b5f60208201905061039a5f830184610378565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610404826102ba565b915061040f836102ba565b92508261041f5761041e6103cd565b5b828206905092915050565b5f819050919050565b61044461043f826101f2565b61042a565b82525050565b5f6104558285610433565b6020820191506104658284610433565b6020820191508190509392505050565b5f61047f826102ba565b915061048a836102ba565b92508261049a576104996103cd565b5b82820490509291505056fea2646970667358221220fbaca692c2fc28ce0f3cdfd0ed8f53ab3e98c08e3e68b13b4de1c31de031021f64736f6c634300081a0033"

from web3 import Web3, EthereumTesterProvider


w3 = Web3(EthereumTesterProvider())

# provide `constructor` args if appropriate:
deploy = w3.eth.contract(abi=ABI, bytecode=BYTECODE).constructor().transact()
contract_address = w3.eth.get_transaction_receipt(deploy)["contractAddress"]
contract = w3.eth.contract(address=contract_address, abi=ABI)

import pdb; pdb.set_trace() # noqa 
# result = contract.functions.exampleFunction().call()
