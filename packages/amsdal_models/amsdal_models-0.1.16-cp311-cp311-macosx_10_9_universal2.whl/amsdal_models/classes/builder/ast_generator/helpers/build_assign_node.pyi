import ast
from amsdal_models.classes.builder.ast_generator.dependency_generator import AstDependencyGenerator as AstDependencyGenerator
from amsdal_models.classes.builder.ast_generator.helpers.build_annotation_node import build_annotation_node as build_annotation_node
from amsdal_models.schemas.data_models.core import DictSchema as DictSchema, LegacyDictSchema as LegacyDictSchema, TypeData as TypeData
from amsdal_models.schemas.enums import CoreTypes as CoreTypes
from typing import Any

class UNSET: ...

def build_assign_node(target_name: str, type_data: TypeData, value: Any = ..., *, is_required: bool = ..., can_be_a_reference: bool = ..., ast_dependency_generator: AstDependencyGenerator) -> ast.AnnAssign | ast.stmt: ...
def cast_property_value(type_data: TypeData, property_value: Any) -> Any: ...
def cast_number_value(property_value: Any) -> int | float: ...
