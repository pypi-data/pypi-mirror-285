from _typeshed import Incomplete
from amsdal_models.classes.builder.class_source_builder import ClassSourceBuilder as ClassSourceBuilder
from amsdal_models.classes.constants import CONTRIB_MODELS_MODULE as CONTRIB_MODELS_MODULE, CORE_MODELS_MODULE as CORE_MODELS_MODULE, TYPE_MODELS_MODULE as TYPE_MODELS_MODULE, USER_MODELS_MODULE as USER_MODELS_MODULE
from amsdal_models.classes.data_models.dependencies import DependencyModelNames as DependencyModelNames
from amsdal_models.classes.model import Model as Model, TypeModel as TypeModel
from amsdal_models.classes.utils import resolve_base_class_for_schema as resolve_base_class_for_schema
from amsdal_models.enums import BaseClasses as BaseClasses
from amsdal_models.schemas.data_models.schema import ObjectSchema as ObjectSchema
from amsdal_models.schemas.data_models.schemas_directory import SchemasDirectory as SchemasDirectory
from amsdal_models.schemas.manager import BuildSchemasManager as BuildSchemasManager
from amsdal_utils.models.enums import SchemaTypes
from pathlib import Path

class ClassWriter:
    models_dir: Incomplete
    def __init__(self, models_dir: Path) -> None: ...
    @property
    def models_module_name(self) -> str: ...
    def generate_models(self, schemas_dirs: list[SchemasDirectory]) -> None: ...
    def generate_type_models(self, schemas_manager: BuildSchemasManager, model_names: DependencyModelNames) -> None: ...
    def generate_core_models(self, schemas_manager: BuildSchemasManager, model_names: DependencyModelNames) -> None: ...
    def generate_contrib_models(self, schemas_manager: BuildSchemasManager, model_names: DependencyModelNames) -> None: ...
    def generate_user_models(self, schemas_manager: BuildSchemasManager, model_names: DependencyModelNames) -> None: ...
    def generate_model(self, schema: ObjectSchema, schema_type: SchemaTypes, base_class: type[Model | TypeModel], model_names: DependencyModelNames, sub_models_directory: str) -> None: ...
    @staticmethod
    def _write_model(module_path: Path, class_source_builder: ClassSourceBuilder) -> None: ...
