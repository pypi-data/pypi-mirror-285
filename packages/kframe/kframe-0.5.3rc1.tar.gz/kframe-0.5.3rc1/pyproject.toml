[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kframe"
version = "0.5.3rc1"
description = 'Kaeus development framework'
readme = "README.md"
requires-python = ">=3.10"
license = "MS-PL"
keywords = []
authors = [
  { name = "Sebastian Garcia", email = "sgarcia@kaeusanalytics.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Environment :: Console",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
]
dependencies = [
]

[project.optional-dependencies]
api = [
  "fastapi==0.111.*",
  "fastapi-health == 0.4.*",
  "fastapi-pagination == 0.12.*",
  "prometheus-fastapi-instrumentator == 6.1.*",
  "uvicorn[standard] == 0.29.*",
]
db = [
  "sqlalchemy==2.0.*",
  "alembic==1.13.*",
]
sentry = [
  "sentry-sdk[fastapi]",
]

[project.urls]
# TODO: Update these URLs
Documentation = "https://github.com/kaeus-sgarcia/kframe#readme"
Issues = "https://github.com/kaeus-sgarcia/kframe/issues"
Source = "https://github.com/kaeus-sgarcia/kframe"

# Development environment
[tool.hatch.envs.default]
python = "3.10"
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "ruff",
  "pre-commit",
  "commitizen",
]
features = ["api", "db"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]


[tool.hatch.envs.quality]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
features = ["api", "db"]

[[tool.hatch.envs.quality.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.quality.scripts]
test = "pytest {args:tests}"

[tool.hatch.envs.build_quality]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
features = ["api", "db"]

[tool.hatch.envs.build_quality.scripts]
test = "pytest {args:tests}"

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
  "pytest",
]
features = ["api", "db"]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types  --ignore-missing-imports --non-interactive {args:src/kframe tests}"

[tool.coverage.run]
source_pkgs = ["kframe", "tests"]
branch = true
parallel = true
omit = [
  "src/kframe/__about__.py",
]

[tool.coverage.paths]
kframe = ["src/kframe", "*/kframe/src/kframe"]
tests = ["tests", "*/kframe/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
exclude = [
  "tests/*",
  "*/__about__.py",
]

[tool.ruff.lint]
preview = false
extend-select = ["D"]
extend-ignore = ["TID252", "TRY003", "EM10", "SLF", "FBT", "ARG", "B019", "TCH010"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
annoted_tag = true
major_version_zero = true
prerelease_offset = 1
changelog_merge_prerelease = true
changelog_incremental = true
version_files = [
    "pyproject.toml/project:^version",
    "src/kframe/__about__.py:^__version__"
]
