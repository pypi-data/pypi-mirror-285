[project]
authors = [
    { name = "Zebedee Nicholls", email = "zebedee.nicholls@climate-resource.com" },
]
requires-python = ">=3.9"
dependencies = [
    "loguru>=0.7",
    "cf-xarray>=0.8",
    "xarray>=2022.0",
    "pint-xarray>=0.3",
    "cftime>=1.6",
    "typing-extensions>=4.0",
    "pooch>=1.0",
    "attrs>=22.0",
    "typer<1.0.0,>=0.9.0",
    "validators<1.0.0,>=0.28.3",
    "cattrs<24.0.0,>=23.2.3",
]
name = "input4mips-validation"
version = "0.5.2"
description = "Validation of input4MIPs data (checking file formats, metadata etc.)."
readme = "README.md"

[project.license]
text = "BSD-3-Clause"

[project.optional-dependencies]
dev = [
    "mypy<2.0.0,>=1.2.0",
    "ruff<1.0.0,>=0.1.8",
    "pre-commit<4.0.0,>=3.3.1",
    "towncrier<24.0.0,>=23.6.0",
    "liccheck<1.0.0,>=0.9.1",
    "types-requests<3.0.0.0,>=2.31.0.20240125",
    "pandas-stubs<3.0.0.0,>=2.2.2.240603",
    "pyyaml<7.0,>=6.0.1",
    "towncrier<24.0,>=23.11.0",
]
docs = [
    "myst-nb<1.0.0,>=0.17.0",
    "sphinx-book-theme<2.0.0,>=1.1.0",
    "sphinx-autodoc-typehints<2.0.0,>=1.23.0",
    "sphinx-autodocgen<2.0,>=1.3",
    "jupytext<2.0.0,>=1.14.5",
    "sphinx-copybutton<1.0.0,>=0.5.2",
    "sphinx-click<6.0.0,>=5.1.0",
]
notebooks = [
    "notebook>=6.0",
]
plots = [
    "matplotlib>=3.0",
]
tests = [
    "pytest<8.0.0,>=7.3.1",
    "pytest-cov<5.0.0,>=4.0.0",
    "coverage<8.0.0,>=7.2.0",
]

[project.scripts]
input4mips-validation = "input4mips_validation.cli:app"

[tool.pixi.feature.py39.dependencies]
python = "3.9.*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.environments.default]
features = [
    "py39",
]

[tool.pixi.environments.docs]
features = [
    "docs",
]
solve-group = "default"

[tool.pixi.environments.all-dev]
features = [
    "dev",
    "docs",
    "notebooks",
    "plots",
    "tests",
]
solve-group = "default"

[tool.pixi.environments.py39]
features = [
    "py39",
]
solve-group = "default"

[tool.pixi.environments.py310]
features = [
    "py310",
]

[tool.pixi.environments.py311]
features = [
    "py311",
]

[tool.pixi.environments.test-py39]
features = [
    "tests",
]
solve-group = "default"

[tool.pixi.environments.test-py310]
features = [
    "tests",
    "py310",
]

[tool.pixi.environments.test-py311]
features = [
    "tests",
    "py311",
]

[tool.pixi.project]
channels = [
    "conda-forge",
]
platforms = [
    "osx-64",
    "osx-arm64",
    "linux-64",
    "linux-aarch64",
    "win-64",
]

[tool.pixi.pypi-dependencies.input4mips_validation]
path = "."
editable = true

[tool.pixi.tasks]

[tool.pixi.dependencies]
netcdf4 = ">=1.7.1,<1.8"
numpy = "<2.0"

[tool.pdm.dev-dependencies]

[tool.pdm.build]
locked = true
includes = [
    "src/input4mips_validation",
    "LICENCE",
]

[tool.coverage.run]
source = [
    "src",
]
branch = true

[tool.coverage.report]
fail_under = 80
skip_empty = true
show_missing = true
exclude_also = [
    "if TYPE_CHECKING",
]

[tool.mypy]
strict = true
disallow_any_unimported = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
follow_imports = "normal"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
src = [
    "src",
]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "D",
    "PL",
    "TRY",
    "NPY",
    "RUF",
    "UP",
    "S",
]
unfixable = [
    "PD002",
]
ignore = [
    "D200",
    "D400",
]

[tool.ruff.lint.per-file-ignores]
"test*.py" = [
    "D",
    "S101",
    "PLR2004",
]
"docs/source/notebooks/*" = [
    "D100",
    "E402",
    "S101",
]
"scripts/*" = [
    "S101",
]
"stubs/*" = [
    "PLR0913",
]

[tool.ruff.lint.isort]
known-first-party = [
    "src",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.towncrier]
package = "input4mips_validation"
package_dir = "src"
filename = "docs/source/changelog.md"
directory = "changelog/"
title_format = "## input4mips-validation {version} ({project_date})"
underlines = [
    "",
    "",
    "",
]
issue_format = "[#{issue}](https://github.com/climate-resource/input4mips_validation/pulls/{issue})"
type = [
    { directory = "breaking", name = "Breaking Changes", showcontent = true },
    { directory = "deprecation", name = "Deprecations", showcontent = true },
    { directory = "feature", name = "Features", showcontent = true },
    { directory = "improvement", name = "Improvements", showcontent = true },
    { directory = "fix", name = "Bug Fixes", showcontent = true },
    { directory = "docs", name = "Improved Documentation", showcontent = true },
    { directory = "trivial", name = "Trivial/Internal Changes", showcontent = false },
]

[tool.liccheck]
authorized_licenses = [
    "bsd",
    "bsd license",
    "BSD 3-Clause",
    "CC0",
    "apache",
    "apache 2.0",
    "apache software",
    "apache software license",
    "Apache License, Version 2.0",
    "Historical Permission Notice and Disclaimer (HPND)",
    "isc license",
    "isc license (iscl)",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "LGPLv2+",
    "GNU Lesser General Public License v2 (LGPLv2)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "mit",
    "mit license",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "python software foundation",
    "python software foundation license",
    "zpl 2.1",
]
unauthorized_licenses = [
    "agpl",
    "gnu agpl",
    "gpl v3",
    "gplv3",
    "gpl v2",
    "gplv2",
    "gpl v1",
    "gplv1",
]

[build-system]
requires = [
    "pdm-backend",
    "pdm-build-locked",
]
build-backend = "pdm.backend"
