# Code generated by TRAC

from __future__ import annotations
import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

from .type import *  # noqa


class CopyStatus(_enum.Enum):

    COPY_STATUS_NOT_SET = 0, 

    COPY_AVAILABLE = 1, 

    COPY_EXPUNGED = 2, 


class IncarnationStatus(_enum.Enum):

    INCARNATION_STATUS_NOT_SET = 0, 

    INCARNATION_AVAILABLE = 1, 

    INCARNATION_EXPUNGED = 2, 


@_dc.dataclass
class StorageCopy:

    storageKey: str = None

    storagePath: str = None

    storageFormat: str = None

    copyStatus: CopyStatus = CopyStatus.COPY_STATUS_NOT_SET

    copyTimestamp: DatetimeValue = None

    storageOptions: _tp.Dict[str, Value] = _dc.field(default_factory=dict)


@_dc.dataclass
class StorageIncarnation:

    copies: _tp.List[StorageCopy] = _dc.field(default_factory=list)

    incarnationIndex: int = None

    incarnationTimestamp: DatetimeValue = None

    incarnationStatus: IncarnationStatus = IncarnationStatus.INCARNATION_STATUS_NOT_SET


@_dc.dataclass
class StorageItem:

    incarnations: _tp.List[StorageIncarnation] = _dc.field(default_factory=list)


@_dc.dataclass
class StorageDefinition:

    dataItems: _tp.Dict[str, StorageItem] = _dc.field(default_factory=dict)

    storageOptions: _tp.Dict[str, Value] = _dc.field(default_factory=dict)
