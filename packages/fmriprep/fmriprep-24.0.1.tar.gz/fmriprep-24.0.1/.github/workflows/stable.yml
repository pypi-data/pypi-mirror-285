name: Stable tests

on:
  push:
    branches:
      - master
      - maint/*
      - next
  pull_request:
    branches:
      - master
      - maint/*
      - next

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  stable:
    # Check each OS, all supported Python, minimum versions and latest releases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.10', '3.11', '3.12']
        install: ['pip']
        check: ['tests']
        pip-flags: ['']
    env:
      INSTALL_TYPE: ${{ matrix.install }}
      CHECK_TYPE: ${{ matrix.check }}
      EXTRA_PIP_FLAGS: ${{ matrix.pip-flags }}
      OS_TYPE: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install dependencies
        run: .maint/ci/install_dependencies.sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Create virtual environment
        run: .maint/ci/create_venv.sh
      - name: Build archive
        run: |
          source .maint/ci/build_archive.sh
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV
      - name: Install fMRIPrep
        run: .maint/ci/install.sh
      - name: Install extras
        run: .maint/ci/install_extras.sh
      - name: Run tests
        run: .maint/ci/check.sh
      - uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ always() }}
