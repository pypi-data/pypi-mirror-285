[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "typenames"
dynamic = ["version"]
description = "String representations of type annotations."
readme = "README.md"
authors = [{ name = "Jay Qi", email = "jayqi.opensource@gmail.com" }]
license = { file = "LICENSE" }
keywords = ["typing", "type hints", "type annotations", "pep 585", "pep 604"]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"

[project.optional-dependencies]
tests = ["pytest>=6"]

[project.urls]
"Homepage" = "https://jayqi.github.io/typenames/"
"Repository" = "https://github.com/jayqi/typenames"
"Documentation" = "https://jayqi.github.io/typenames/"
"Bug Tracker" = "https://github.com/jayqi/typenames/issues"
"Changelog" = "https://jayqi.github.io/typenames/stable/changelog/"

[tool.hatch.version]
path = "typenames/__init__.py"

## DEFAULT ENVIRONMENT ##

[tool.hatch.envs.default]
dependencies = ["ipython", "mypy", "reprexlite", "ruff"]
python = "3.10"
path = ".venv"

[tool.hatch.envs.default.scripts]
format = ["ruff format"]
lint = [
  "ruff format --check",
  "ruff check",
]
typecheck = ["mypy --install-types --non-interactive"]
clean-coverage = [
  "rm .coverage || true",
  "rm coverage.xml || true",
  "rm -r htmlcov || true",
]

## TESTS ENVIRONMENT ##

[tool.hatch.envs.tests]
features = ["tests"]
dependencies = ["coverage", "pytest-cov"]
template = "tests"

[[tool.hatch.envs.tests.matrix]]
python = ["3.8"]
typing_extensions = ["typing_extensions", "no-typing_extensions"]

[[tool.hatch.envs.tests.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.tests.overrides]
matrix.typing_extensions.dependencies = [
  { value = "typing_extensions>4", if = ["typing_extensions"], python = "3.8" },
]
matrix.typing_extensions.env-vars = [
  { key = "NO_TYPING_EXTENSIONS", value = "1", if = ["no-typing_extensions"] },
]

[tool.hatch.envs.tests.scripts]
run = "pytest tests -vv --cov=typenames --cov-report=term --cov-report=html --cov-report=xml --cov-append"
run-debug = "run --pdb"

## DOCS ENVIRONMENT ##

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mike",
  "mkdocstrings[python]",
  "mdx-truly-sane-lists",
]
template = "docs"

[tool.hatch.envs.docs.scripts]
build = [
  "rm -rf site/",
  "cp README.md docs/index.md",
  "cp CHANGELOG.md docs/changelog.md",
  "mkdocs build",
]

## INSPECT-TYPES ENVIRONMENT ##

[tool.hatch.envs.inspect-types]
dependencies = ["ipykernel", "nbconvert"]
detached = true

[[tool.hatch.envs.inspect-types.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.inspect-types.scripts]
generate-notebook = """
jupyter nbconvert inspect_types/_inspect_types.ipynb \
--to notebook \
--output inspect_types_{matrix:python}.ipynb \
--execute \
--allow-errors"""

## TOOLS ##

[tool.ruff]
line-length = 99
src = ["typenames", "tests"]

[tool.ruff.lint]
select = [
  "E", # Pyflakes
  "F", # Pycodestyle
  "I", # isort
]
unfixable = ["F"]

[tool.ruff.lint.isort]
known-first-party = ["typenames"]
force-sort-within-sections = true

[tool.mypy]
files = ["typenames", "tests/typechecks.py"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.run]
source = ["typenames"]
