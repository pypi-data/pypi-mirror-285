# Define a dictionary for 10x10 representation of each letter using asterisks
letter_patterns = {
    'A': [
        "    **    ", 
        "   *  *   ", 
        "  *    *  ", 
        " *      * ", 
        "*        *", 
        "**********", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *"
    ],
    'B': [
        "********  ", 
        "*       * ", 
        "*       * ", 
        "*       * ", 
        "********  ", 
        "*       * ", 
        "*       * ", 
        "*       * ", 
        "*       * ", 
        "********  "
    ],
    'C': [
        "  ******  ", 
        " *      * ", 
        "*        *", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*        *", 
        " *      * ", 
        "  ******  "
    ],
    'D': [
        "********  ", 
        "*       * ", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*       * ", 
        "********  "
    ],
    'E': [
        "**********", 
        "*         ", 
        "*         ", 
        "*         ", 
        "********  ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "**********"
    ],
    'F': [
        "**********", 
        "*         ", 
        "*         ", 
        "*         ", 
        "********  ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         "
    ],
    'G': [
        "  ******* ", 
        " *       *", 
        "*        *", 
        "*         ", 
        "*         ", 
        "*    *****", 
        "*        *", 
        "*        *", 
        " *      * ", 
        "  ******  "
    ],
    'H': [
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "**********", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *"
    ],
    'I': [
        "**********", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "**********"
    ],
    'J': [
        "**********", 
        "       ** ", 
        "       ** ", 
        "       ** ", 
        "       ** ", 
        "       ** ", 
        "       ** ", 
        "       ** ", 
        "*      ** ", 
        " ******   "
    ],
    'K': [
        "*       * ", 
        "*      *  ", 
        "*     *   ", 
        "*    *    ", 
        "*   *     ", 
        "*  *      ", 
        "*   *     ", 
        "*    *    ", 
        "*     *   ", 
        "*      *  "
    ],
    'L': [
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "**********"
    ],
    'M': [
        "*        *", 
        "**      **", 
        "* *    * *", 
        "*  *  *  *", 
        "*   **   *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *"
    ],
    'N': [
        "*        *", 
        "**       *", 
        "* *      *", 
        "*  *     *", 
        "*   *    *", 
        "*    *   *", 
        "*     *  *", 
        "*      * *", 
        "*       **", 
        "*        *"
    ],
    'O': [
        "  ******  ", 
        " *      * ", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        " *      * ", 
        "  ******  "
    ],
    'P': [
        "********  ", 
        "*       * ", 
        "*       * ", 
        "*       * ", 
        "********  ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         ", 
        "*         "
    ],
    'Q': [
        "  ******  ", 
        " *      * ", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*    *   *", 
        "*     *  *", 
        " *      * ", 
        "  ****** *"
    ],
    'R': [
        "********  ", 
        "*       * ", 
        "*       * ", 
        "*       * ", 
        "********  ", 
        "*  *      ", 
        "*   *     ", 
        "*    *    ", 
        "*     *   ", 
        "*      *  "
    ],
    'S': [
        "  ******* ", 
        " *        ", 
        "*         ", 
        "*         ", 
        "  ******* ", 
        "         *", 
        "         *", 
        "         *", 
        " *       *", 
        "  ******* "
    ],
    'T': [
        "**********", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    "
    ],
    'U': [
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        " *      * ", 
        "  ******  "
    ],
    'V': [
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        " *      * ", 
        "  *    *  ", 
        "   *  *   ", 
        "    **    ", 
        "    **    "
    ],
    'W': [
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*        *", 
        "*   **   *", 
        "*  *  *  *", 
        "* *    * *", 
        "**      **", 
        "*        *"
    ],
    'X': [
        "*        *", 
        " *      * ", 
        "  *    *  ", 
        "   *  *   ", 
        "    **    ", 
        "    **    ", 
        "   *  *   ", 
        "  *    *  ", 
        " *      * ", 
        "*        *"
    ],
    'Y': [
        "*        *", 
        " *      * ", 
        "  *    *  ", 
        "   *  *   ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    ", 
        "    **    "
    ],
    'Z': [
        "**********", 
        "        * ", 
        "       *  ", 
        "      *   ", 
        "     *    ", 
        "    *     ", 
        "   *      ", 
        "  *       ", 
        " *        ", 
        "**********"
    ],
    ' ': [
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          ", 
        "          "
    ]
}

def fancy_output(word):
    word = word.upper()
    # Prepare the fancy output using the patterns
    output_lines = [""] * 10
    for char in word:
        if char in letter_patterns:
            for i in range(10):
                output_lines[i] += letter_patterns[char][i] + "  "  # Adding extra space between letters
        else:
            raise ValueError(f"Character '{char}' is not supported.")

    # Print the fancy output
    for line in output_lines:
        print(line)

# Get the word from the user
word = input("Enter a word: ")
fancy_output(word)
